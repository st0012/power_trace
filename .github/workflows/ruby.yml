name: Ruby

on: [push, pull_request]

jobs:
  test:
    name: Test on ruby ${{ matrix.ruby_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ruby_version: ['2.6']
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby ${{ matrix.ruby_version }}
      uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}

    - name: Setup
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3

    - name: Run test
      run: bundle exec rake

    - name: Publish Test Coverage
      uses: paambaati/codeclimate-action@v2.6.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      if: ${{ env.CC_TEST_REPORTER_ID != '' }}
      with:
        # the coverage result should already be generated by the previous step
        # so we don't need to provide and command in the step
        # this is just a placeholder to avoid it run the default `yarn coverage` command
        coverageCommand: ruby -v
        debug: true
